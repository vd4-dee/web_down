{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pandas as pd # type: ignore\n",
    "import win32com.client as win32 # type: ignore\n",
    "from datetime import datetime\n",
    "import csv\n",
    "\n",
    "# Đường dẫn tệp và thư mục\n",
    "kibaocao = '03/2025'\n",
    "deadlinethaythe = '10h00 09/04/2025'\n",
    "subject = \"[FAF-KPIs]: KPIs RSM T\" + kibaocao + \" -\"\n",
    "html_file_path = 'kpi.rsm.html'\n",
    "attachments_folder = os.path.join(os.getcwd(), 'attachment')\n",
    "log_file = 'email_sending_log.csv'\n",
    "# Số lượng email cần gửi (hoặc None để gửi tất cả)\n",
    "start_index = 0\n",
    "end_index = None"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "email_data = [\n",
    "    {\n",
    "        \"No\": 1,\n",
    "        \"To\": \"LinhPT2@fpt.com\",\n",
    "        \"Receiver\": \"Chị Linh\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"LinhPT2\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-LinhPT2.xlsx\",\n",
    "        \"Region_Name\": \"Hà Nội\",\n",
    "        \"Region\": \"HNI\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 2,\n",
    "        \"To\": \"HanhHNX@fpt.com\",\n",
    "        \"Receiver\": \"Chị Hạnh\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"HanhHNX\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-HanhHNX.xlsx\",\n",
    "        \"Region_Name\": \"Miền Đông\",\n",
    "        \"Region\": \"Mdong\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 3,\n",
    "        \"To\": \"TuanNT19@fpt.com\",\n",
    "        \"Receiver\": \"Anh Tuấn\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"TuanNT19\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-TuanNT19.xlsx\",\n",
    "        \"Region_Name\": \"Miền Tây\",\n",
    "        \"Region\": \"Mtay\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 4,\n",
    "        \"To\": \"LongND4@fpt.com\",\n",
    "        \"Receiver\": \"Anh Long\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"LongND4\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-LongND4.xlsx\",\n",
    "        \"Region_Name\": \"Miền Bắc 1\",\n",
    "        \"Region\": \"MB1\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 5,\n",
    "        \"To\": \"HaTT2@fpt.com\",\n",
    "        \"Receiver\": \"Chị Hà\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"HaTT2\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-HaTT2.xlsx\",\n",
    "        \"Region_Name\": \"Miền Trung\",\n",
    "        \"Region\": \"Mtrung\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 6,\n",
    "        \"To\": \"LongNN4@fpt.com\",\n",
    "        \"Receiver\": \"Anh Long\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"LongNN4\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-LongNN4.xlsx\",\n",
    "        \"Region_Name\": \"Hồ Chí Minh\",\n",
    "        \"Region\": \"HCM\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 7,\n",
    "        \"To\": \"TienNH7@fpt.com\",\n",
    "        \"Receiver\": \"Anh Tiến\",\n",
    "        \"CC\": \"viltt6@fpt.com\",\n",
    "        \"Name\": \"TienNH7\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-TienNH7.xlsx\",\n",
    "        \"Region_Name\": \"Miền Bắc 2\",\n",
    "        \"Region\": \"MB2\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    }\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "email_data_test = [\n",
    "    {\n",
    "        \"No\": 1,\n",
    "        \"To\": \"khangvd4@fpt.com\",\n",
    "        \"Receiver\": \"Chị Linh\",\n",
    "        \"CC\": \"khangvd4@fpt.com\",\n",
    "        \"Name\": \"LinhPT2\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-LinhPT2.xlsx\",\n",
    "        \"Region_Name\": \"Hà Nội\",\n",
    "        \"Region\": \"HNI\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    },\n",
    "    {\n",
    "        \"No\": 2,\n",
    "        \"To\": \"khangvd4@fpt.com\",\n",
    "        \"Receiver\": \"Chị Hạnh\",\n",
    "        \"CC\": \"khangvd4@fpt.com\",\n",
    "        \"Name\": \"HanhHNX\",\n",
    "        \"Attachment\": f\"{kibaocao.replace('/', '')}-KPI-RSM-HanhHNX.xlsx\",\n",
    "        \"Region_Name\": \"Miền Đông\",\n",
    "        \"Region\": \"Mdong\",\n",
    "        \"Attachment2\": None,\n",
    "        \"Tuxung\": \"Em\"\n",
    "    }\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "def send_bulk_emails(email_data, html_file, attachments_folder, log_file, start_index=None, end_index=None):\n",
    "\n",
    "    # Mở file log ở chế độ ghi để xóa log cũ và thêm header\n",
    "    with open(log_file, 'w', newline='', encoding='utf-8') as log:\n",
    "        writer = csv.writer(log)\n",
    "        writer.writerow(['Timestamp', 'Recipient', 'Status', 'Details'])  # Thêm header\n",
    "\n",
    "    # Đọc file HTML làm nội dung email\n",
    "    try:\n",
    "        with open(html_file, 'r', encoding='utf-8') as file:\n",
    "            html_template = file.read()\n",
    "    except Exception as e:\n",
    "        with open(log_file, 'a', newline='', encoding='utf-8') as log:\n",
    "            writer = csv.writer(log)\n",
    "            writer.writerow([datetime.now(), \"Error reading HTML file\", str(e)])\n",
    "        return\n",
    "\n",
    "    # Khởi tạo Outlook\n",
    "    try:\n",
    "        outlook = win32.Dispatch('outlook.application')\n",
    "    except Exception as e:\n",
    "        with open(log_file, 'a', newline='', encoding='utf-8') as log:\n",
    "            writer = csv.writer(log)\n",
    "            writer.writerow([datetime.now(), \"Error initializing Outlook\", str(e)])\n",
    "        return\n",
    "\n",
    "    # Xác định phạm vi email cần gửi\n",
    "    if start_index is None:\n",
    "        start_index = 0\n",
    "    if end_index is None or end_index >= len(email_data):\n",
    "        end_index = len(email_data) - 1\n",
    "\n",
    "    # Gửi email cho từng mục trong JSON\n",
    "    for row in email_data[start_index:end_index + 1]:\n",
    "        try:\n",
    "            # Tùy chỉnh nội dung email\n",
    "            html_content = html_template.replace(\n",
    "                \"Dear anhchirsm,\", f\"Dear {row['Receiver']},\"\n",
    "            ).replace(\n",
    "                \"anh/chị\", row['Tuxung']\n",
    "            ).replace(\n",
    "                \"kibaocao\", kibaocao\n",
    "            ).replace(\n",
    "                \"deadlinethaythe\", deadlinethaythe\n",
    "            )\n",
    "\n",
    "            mail = outlook.CreateItem(0)\n",
    "            mail.To = row['To']\n",
    "            mail.CC = row['CC']\n",
    "            mail.Subject = subject + row['Name']\n",
    "            mail.HTMLBody = html_content\n",
    "\n",
    "            # Thêm tệp đính kèm (nếu có)\n",
    "            attachments = [row.get('Attachment'), row.get('Attachment2')]\n",
    "            for attachment in attachments:\n",
    "                if attachment:\n",
    "                    attachment_path = os.path.join(attachments_folder, attachment)\n",
    "                    if os.path.exists(attachment_path):\n",
    "                        if os.path.getsize(attachment_path) < 1 * 1024 * 1024:  # <1MB\n",
    "                            mail.Attachments.Add(attachment_path)\n",
    "                        else:\n",
    "                            raise ValueError(f\"Attachment too large: {attachment_path}\")\n",
    "                    else:\n",
    "                        raise FileNotFoundError(f\"Attachment not found: {attachment_path}\")\n",
    "\n",
    "            mail.Send()\n",
    "\n",
    "            with open(log_file, 'a', newline='', encoding='utf-8') as log:\n",
    "                writer = csv.writer(log)\n",
    "                writer.writerow([datetime.now(), row['To'], \"Email sent successfully\"])\n",
    "\n",
    "        except Exception as e:\n",
    "            with open(log_file, 'a', newline='', encoding='utf-8') as log:\n",
    "                writer = csv.writer(log)\n",
    "                writer.writerow([datetime.now(), row.get('To', 'Unknown'), f\"Error sending email: {e}\"])\n",
    "\n",
    "    print(f\"Emails from index {start_index} to {end_index} processed. Check the log file for details.\")\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Emails from index 0 to 6 processed. Check the log file for details.\n"
     ]
    }
   ],
   "source": [
    "# Gọi hàm gửi email\n",
    "send_bulk_emails(email_data, html_file_path, attachments_folder, log_file, start_index, end_index)"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "base",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
